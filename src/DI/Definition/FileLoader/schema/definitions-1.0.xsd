<?xml version="1.0" encoding="UTF-8" ?>
<xsd:schema xmlns="http://mnapoli.github.com/PHP-DI/schema/definitions"
            xmlns:xsd="http://www.w3.org/2001/XMLSchema"
            targetNamespace="http://mnapoli.github.com/PHP-DI/schema/definitions"
            elementFormDefault="qualified">

    <xsd:annotation>
        <xsd:documentation>
            <![CDATA[
        PHP-DI XML Definitions Schema, version 1.0
        Authors: Domenic Muskulus

        This defines a way to describe PHP objects and their
        dependencies.
    ]]>
        </xsd:documentation>
    </xsd:annotation>

    <xsd:element name="definitions">
        <xsd:annotation>
            <xsd:documentation>
                <![CDATA[
            The root element of a definition file.
        ]]>
            </xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element ref="value" minOccurs="0" maxOccurs="unbounded"/>
                <xsd:element ref="class" minOccurs="0" maxOccurs="unbounded"/>
                <xsd:element ref="interface" minOccurs="0" maxOccurs="unbounded"/>
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>

    <xsd:element name="interface">
        <xsd:annotation>
            <xsd:documentation>
                <![CDATA[
            Maps an interface to an implementation.
        ]]>
            </xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
            <xsd:attribute name="name" type="xsd:string" use="required"/>
            <xsd:attribute name="class" type="xsd:string" use="required"/>
            <xsd:attributeGroup ref="scope"/>
            <xsd:attributeGroup ref="lazy"/>
        </xsd:complexType>
    </xsd:element>

    <xsd:element name="class">
        <xsd:annotation>
            <xsd:documentation>
                <![CDATA[
            Defines a single class. A class definition may contain tags for constructor, property and method injection.
        ]]>
            </xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element ref="constructor" minOccurs="0" maxOccurs="1"/>
                <xsd:element ref="method" minOccurs="0" maxOccurs="unbounded"/>
                <xsd:element ref="property" minOccurs="0" maxOccurs="unbounded"/>
            </xsd:sequence>
            <xsd:attribute name="name" type="xsd:string" use="required"/>
            <xsd:attributeGroup ref="scope"/>
            <xsd:attributeGroup ref="lazy"/>
        </xsd:complexType>
    </xsd:element>

    <xsd:element name="constructor">
        <xsd:annotation>
            <xsd:documentation>
                <![CDATA[
            Class definitions can specify zero or more constructor arguments. This is an alternative to "autowire constructor". Arguments correspond to either a specific index of the constructor argument list or are supposed to be matched generically by type.
        ]]>
            </xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element ref="argument" minOccurs="1" maxOccurs="unbounded"/>
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>

    <xsd:element name="method">
        <xsd:annotation>
            <xsd:documentation>
                <![CDATA[
            Class definitions can specify zero or more method injections. Arguments correspond to either a specific index of the method argument list or are supposed to be matched generically by type.
        ]]>
            </xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element ref="argument" minOccurs="1" maxOccurs="unbounded"/>
            </xsd:sequence>
            <xsd:attribute name="name" type="xsd:string" use="required">
                <xsd:annotation>
                    <xsd:documentation>
                        <![CDATA[
                    The name of the method.
                ]]>
                    </xsd:documentation>
                </xsd:annotation>
            </xsd:attribute>
        </xsd:complexType>
    </xsd:element>

    <xsd:element name="argument">
        <xsd:annotation>
            <xsd:documentation>
                <![CDATA[
            Argument definition for constructor and method injection. This can be mapped to values, classes or interfaces.
        ]]>
            </xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
            <xsd:simpleContent>
                <xsd:extension base="xsd:string">
                    <xsd:attribute name="name" type="xsd:string">
                        <xsd:annotation>
                            <xsd:documentation>
                                <![CDATA[
                            The exact name of the argument in the argument list. Only needed to avoid ambiguities, e.g. in case of 2 arguments of the exact same type.
                        ]]>
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:attribute>
                </xsd:extension>
            </xsd:simpleContent>
        </xsd:complexType>
    </xsd:element>

    <xsd:element name="property">
        <xsd:annotation>
            <xsd:documentation>
                <![CDATA[
            Class definitions can specify zero or more property injections.
        ]]>
            </xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
            <xsd:simpleContent>
                <xsd:extension base="xsd:string">
                    <xsd:attribute name="name" type="xsd:string" use="required">
                        <xsd:annotation>
                            <xsd:documentation>
                                <![CDATA[
                              The name of the property.
                          ]]>
                            </xsd:documentation>
                        </xsd:annotation>
                    </xsd:attribute>
                    <xsd:attributeGroup ref="lazy"/>
                </xsd:extension>
            </xsd:simpleContent>
        </xsd:complexType>
    </xsd:element>

    <xsd:element name="value">
        <xsd:annotation>
            <xsd:documentation>
                <![CDATA[
            Defines a value to be injected, e.g. numbers and strings.
        ]]>
            </xsd:documentation>
        </xsd:annotation>
        <xsd:complexType>
            <xsd:simpleContent>
                <xsd:extension base="xsd:string">
                    <xsd:attribute name="name" type="xsd:string" use="required"/>
                </xsd:extension>
            </xsd:simpleContent>
        </xsd:complexType>
    </xsd:element>

    <xsd:attributeGroup name="lazy">
        <xsd:attribute name="lazy" type="xsd:boolean">
            <xsd:annotation>
                <xsd:documentation>
                    <![CDATA[
                Defines whether the injection should be done using lazy-loading.
            ]]>
                </xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
    </xsd:attributeGroup>

    <xsd:attributeGroup name="scope">
        <xsd:attribute name="scope">
            <xsd:annotation>
                <xsd:documentation>
                    <![CDATA[
                Defines the scope of this class or interface.
            ]]>
                </xsd:documentation>
            </xsd:annotation>
            <xsd:simpleType>
                <xsd:restriction base="xsd:string">
                    <xsd:enumeration value="singleton"/>
                    <xsd:enumeration value="prototype"/>
                </xsd:restriction>
            </xsd:simpleType>
        </xsd:attribute>
    </xsd:attributeGroup>
</xsd:schema>